/*
 * This Scala source file was generated by the Gradle 'init' task.
 */
package fintest

import org.apache.spark.sql.SparkSession
import org.apache.spark.sql.functions._
import org.apache.spark.sql.types._

import conf.Utils

object FinTest {
  def main(args: Array[String]) {
    val spark = SparkSession
      .builder
      .appName("Fin Test")
      .getOrCreate()
    
    import spark.implicits._

    val df1 = spark.read.options(Map("inferSchema"->"true","delimiter"->",","header"->"true"))
                        .csv("file:///home/hzg/work/helloScala/data-files/contractinfo.csv")
    df1.createOrReplaceTempView("contractinfo")

    val df2 = spark.read.options(Map("inferSchema"->"true","delimiter"->",","header"->"true"))
                        .csv("file:///home/hzg/work/helloScala/data-files/purchase.csv")
    df2.createOrReplaceTempView("purchase")

    val df3 = spark.read.options(Map("inferSchema"->"true","delimiter"->",","header"->"true"))
                        .csv("file:///home/hzg/work/helloScala/data-files/redeem.csv")
    df3.createOrReplaceTempView("redeem")

    var sqlDF = spark.sql("""
      select * from contractinfo t1, redeem t2
      where date_sub(t2.txdate, 1)=cast(t1.txdate as date)
        and t2.agmt_name=t1.agmt_name
        and t2.prod=t1.prod
    """)

    sqlDF.show()

    var sqlDF2 = spark.sql("""
      select * from contractinfo t1, purchase t2
      where t2.txdate=t1.txdate
        and t2.agmt_name=t1.agmt_name
        and t2.prod=t1.prod
    """)

    sqlDF2.show()
    
    df1.printSchema()
    var dft1 = df1.select($"agmt_name", $"txdate".cast(DateType).alias("txdate"), $"prod", $"accrue_organ", $"bal")
    var dft3 = df3.select($"agmt_name", date_sub($"txdate", 1).alias("txdate"), $"prod", $"amt")
    dft1.join(dft3, Seq("txdate", "agmt_name", "prod"), "inner").show()

    println("Sum: " + Utils.sum(2, 3))
    
    spark.stop()
  }
}